{"version":3,"sources":["router/wrappers.js","logo-idr.svg","model/filterStudies.js","model/fetchData.js","CategoryStudy.js","Category.js","Categories.js","MaprSearch.js","Search.js","SearchForm.js","Studies.js","App.js","serviceWorker.js","index.js"],"names":["BASEPATH","AbsoluteLink","_ref","_ref$to","to","children","props","Object","objectWithoutProperties","react_default","a","createElement","es","assign","absoluteNavigate","navigate","_extends","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_idr_ref2","type","_ref3","id","className","d","_ref4","logo_idr_SvgLogoIdr","svgRef","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","__webpack_require__","p","filterStudiesByMapQuery","studies","query","startsWith","limit","parseInt","replace","attr","split","desc","filter","study","undefined","sort","b","slice","mapValues","match","forEach","term","allAnds","mustMatch","queryKeyValue","valueMatch","kv","value","trim","substr","toLowerCase","BASE_URL","getStudyValue","fetchStudies","_fetchStudies","_callee","regenerator_default","wrap","_context","prev","next","Promise","all","fetch","then","responses","map","res","json","_ref2","slicedToArray","projects","screens","data","concat","nameA","Name","toUpperCase","nameB","objId","sent","abrupt","stop","loadStudiesMapAnnotations","_x","_loadStudiesMapAnnotations","_callee2","url","_context2","join","response","annsByParentId","annotations","ann","link","parent","class","values","objectSpread","releaseDate","date","Date","isNaN","getTime","title","loadStudiesThumbnails","_x2","_loadStudiesThumbnails","_callee3","toFind","_context3","image","thumbnail","_callee4","matches","_context4","loadMaprStudies","_x5","_x6","_loadMaprStudies","_callee5","maprTerms","termUrls","_context5","maps","rsp","CategoryStudy","studyStyle","rel","href","Category","categoryStudies","label","src_CategoryStudy","Categories","index","category","src_Category","Search","_useState","useState","_useState2","loading","setLoading","_useState3","_useState4","maprResults","setMaprResults","useEffect","asyncToGenerator","mark","results","fetchData","studiesByTerm","imageCounts","s","extra","counter","imageCount","filterStudiesByMaprResponse","terms","r","reduce","count","studyCount","idx","marginTop","queryString","require","debounceTimeout","filteredStudies","location","parse","search","MaprSearch","toMatch","SearchForm","autocompleteItems","menuStyle","position","boxSizing","width","background","border","zIndex","paddingLeft","searchKey","setSearchKey","searchValue","setSearchValue","_useState5","_useState6","maprAutocompleteItems","setMaprAutocompleteItems","_useState7","_useState8","filterQuery","names","name","getStudiesNames","n","inputText","v","push","getStudyValues","matchCounts","words","w","matchList","matchScore","m","getKeyValueAutoComplete","onSubmit","event","preventDefault","onChange","Autocomplete_default","wrapperStyle","display","items","getItemValue","item","clearTimeout","setTimeout","maprKey","_x3","_x4","_loadMaprAutocomplete","loadMaprAutocomplete","onSelect","renderInput","placeholder","margin","renderMenu","renderItem","isHighlighted","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","fill","Studies","setData","src_SearchForm","primary","basepath","src_Categories","path","src_Search","App","data-dropdown-menu","wrappers_AbsoluteLink","height","src_Studies","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20c2f4b6.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Link, navigate } from \"@reach/router\"\n\n// We wrap Reach Router Link & navigate to ensure they use absolute paths\n// Based on discussion and example at\n// https://github.com/reach/router/issues/78#issuecomment-404478024\n\n// For deploying at 'https://will-moore.github.io/idr\nexport const BASEPATH = '/idr'\n\nexport const AbsoluteLink = ({ to = '', children, ...props }) => {\n  to = BASEPATH + to\n  return (\n    <Link {...props} to={to}>\n      {children}\n    </Link>\n  )\n}\n\nexport const absoluteNavigate = (to) => {\n  to = BASEPATH + to;\n  navigate(to);\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:#1976D2;}\\n\\t.st1{fill:#FF9800;}\\n\\t.st2{fill:#F44336;}\\n\\t.st3{fill:#9C27B0;}\\n\\t.st4{fill:#FFC107;}\\n\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"text\"\n}, React.createElement(\"g\", null, React.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M124.4,78.4V22c0-2.9,0.7-5.1,2-6.6s3.1-2.2,5.2-2.2c2.2,0,3.9,0.7,5.3,2.2c1.4,1.4,2.5,3.7,2.5,6.6v56.4 c0,3-1.1,5-2.5,6.4c-1.4,1.5-3.1,2.2-5.3,2.2c-2.1,0-3.8-0.7-5.2-2.2C125,83.3,124.4,81.3,124.4,78.4z\"\n}), React.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M164.1,14H183c4.9,0,9.1,0.9,12.6,1.8s6.7,2.6,9.6,5.1c7.5,6.4,11.2,16.1,11.2,29.1c0,4.3-0.4,8.2-1.1,11.8 c-0.7,3.5-1.9,6.7-3.5,9.6s-3.6,5.4-6,7.6c-1.9,1.7-4,3.1-6.3,4.2c-2.3,1-4.7,1.8-7.3,2.2c-2.6,0.4-5.6,0.6-8.9,0.6h-18.9 c-2.6,0-4.6-0.4-6-1.2c-1.3-0.8-2.1-1.9-2.5-3.4c-0.4-1.4-0.6-3.3-0.6-5.6V23.3c0-3.1,0.6-5.4,2-6.8C158.7,15.1,160.9,14,164.1,14 z M169.3,25.9v48.3h11.4c2.4,0,4.3-0.1,5.7-0.2c1.4-0.1,2.8-0.2,4.2-0.7c1.5-0.5,2.7-1.3,3.8-2.2c4.9-4.1,7.3-11.2,7.3-21.2 c0-7.1-1.1-12.4-3.2-15.9s-4.8-5.8-7.9-6.7c-3.1-1-6.9-1.4-11.3-1.4L169.3,25.9L169.3,25.9z\"\n}), React.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M248.6,56h-4.3v22.4c0,3-1.5,5.3-2.8,6.7s-3.1,2.1-5.2,2.1c-2.3,0-4.1-0.7-5.4-2.2s-2.6-3.7-2.6-6.6V23.3 c0-3.1,1.4-5.4,2.8-6.8s3.7-2.5,6.8-2.5h23.6c3.3,0,6,0.1,8.3,0.4s4.4,1.3,6.2,2.1c2.2,0.9,4.2,2.3,6,4.1c1.7,1.8,3,3.8,3.9,6.1 c0.9,2.3,1.3,4.8,1.3,7.4c0,5.3-1.5,9.6-4.5,12.8s-7.6,5.5-13.7,6.8c2.6,1.4,5,3.4,7.4,6.1c2.3,2.7,4.4,5.5,6.3,8.5 c1.8,3,3.3,5.7,4.3,8.2s1.5,4.1,1.5,5s-0.3,1.9-0.9,2.8c-0.6,0.9-1.4,1.7-2.5,2.2c-1,0.5-2.2,0.8-3.6,0.8c-1.6,0-3-0.4-4.1-1.1 c-1.1-0.8-2.1-1.7-2.9-2.9s-1.9-2.9-3.2-5.2l-5.8-9.7c-2.1-3.5-3.9-6.2-5.6-8.1c-1.6-1.9-3.3-2.5-5-3.2 C253.3,56.3,251.2,56,248.6,56z M256.9,26h-12.6v19h12.2c3.5,0,6.4-0.3,8.8-0.9c2.4-0.6,4.2-1.6,5.4-3.1c1.3-1.4,1.9-3.4,1.9-6 c0-2-0.5-3.7-1.5-5.2s-2.4-2-4.2-2.8C265.2,26.3,261.9,26,256.9,26z\"\n})));\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"logomark\"\n}, React.createElement(\"g\", null, React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M40,64H8c-4.4,0-8-3.6-8-8l0,0c0-4.4,3.6-8,8-8h32c4.4,0,8,3.6,8,8l0,0C48,60.4,44.4,64,40,64z\"\n}), React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M96,64H64c-4.4,0-8-3.6-8-8l0,0c0-4.4,3.6-8,8-8h32c4.4,0,8,3.6,8,8l0,0C104,60.4,100.4,64,96,64z\"\n}), React.createElement(\"path\", {\n  className: \"st2\",\n  d: \"M80,40H24c-4.4,0-8-3.6-8-8l0,0c0-4.4,3.6-8,8-8h56c4.4,0,8,3.6,8,8l0,0C88,36.4,84.4,40,80,40z\"\n}), React.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M80,88H24c-4.4,0-8-3.6-8-8l0,0c0-4.4,3.6-8,8-8h56c4.4,0,8,3.6,8,8l0,0C88,84.4,84.4,88,80,88z\"\n}), React.createElement(\"path\", {\n  className: \"st3\",\n  d: \"M64,16H40c-4.4,0-8-3.6-8-8l0,0c0-4.4,3.6-8,8-8h24c4.4,0,8,3.6,8,8l0,0C72,12.4,68.4,16,64,16z\"\n}), React.createElement(\"path\", {\n  className: \"st4\",\n  d: \"M64,112H40c-4.4,0-8-3.6-8-8l0,0c0-4.4,3.6-8,8-8h24c4.4,0,8,3.6,8,8l0,0C72,108.4,68.4,112,64,112z\"\n})));\n\nvar SvgLogoIdr = function SvgLogoIdr(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 288.5 112\",\n    style: {\n      enableBackground: \"new 0 0 288.5 112\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogoIdr, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-idr.1561c6e6.svg\";\nexport { ForwardRef as ReactComponent };","\nexport function filterStudiesByMapQuery(studies, query) {\n  if (query.startsWith(\"FIRST\") || query.startsWith(\"LAST\")) {\n    // E.g. query is 'FIRST10:date' sort by 'date' and return first 10\n    let limit = parseInt(query.replace('FIRST', '').replace('LAST', ''));\n    let attr = query.split(':')[1];\n    let desc = query.startsWith(\"FIRST\") ? -1 : 1;\n    // first filter studies, remove those that don't have 'attr'\n    let sorted = studies\n      .filter(study => study[attr] !== undefined)\n      .sort((a, b) => {\n        return a[attr] < b[attr] ? desc : a[attr] > b[attr] ? -desc : 0;\n      });\n    return sorted.slice(0, limit);\n  }\n\n  let matches = studies.filter(study => {\n    // If no key-values loaded, filter out\n    if (!study.mapValues) {\n      return false;\n    }\n    let match = false;\n    // first split query by AND and OR\n    let ors = query.split(' OR ');\n    ors.forEach(term => {\n      let allAnds = true;\n      let ands = term.split(' AND ');\n      ands.forEach(mustMatch => {\n        let queryKeyValue = mustMatch.split(\":\");\n        let valueMatch = false;\n        // check all key-values (may be duplicate keys) for value that matches\n        for (let i=0; i<study.mapValues.length; i++){\n          let kv = study.mapValues[i];\n          if (kv[0] === queryKeyValue[0]) {\n            let value = queryKeyValue[1].trim();\n            if (value.substr(0, 4) === 'NOT ') {\n              value = value.replace('NOT ', '');\n              if (kv[1].toLowerCase().indexOf(value.toLowerCase()) === -1) {\n                valueMatch = true;\n              }\n            } else if (kv[1].toLowerCase().indexOf(value.toLowerCase()) > -1) {\n              valueMatch = true;\n            }\n          }\n        }\n        // if not found, then our AND term fails\n        if (!valueMatch) {\n          allAnds = false;\n        }\n      });\n      if (allAnds) {\n        match = true;\n      }\n    });\n    return match;\n  });\n  return matches;\n}\n\nexport function getStudyValues(study, key) {\n  if (!study.mapValues) {\n    return [];\n  }\n  let matches = [];\n  for (let i=0; i<study.mapValues.length; i++){\n    let kv = study.mapValues[i];\n    if (kv[0] === key) {\n      matches.push(kv[1]);\n    }\n  }\n  return matches;\n}\n\nexport function getStudiesNames(studies, filterQuery) {\n  let names = studies.map(s => s.Name);\n  if (filterQuery) {\n    names = names.filter(name => name.toLowerCase().indexOf(filterQuery) > -1);\n  }\n  names.sort((a, b) => a.toLowerCase() > b.toLowerCase() ? 1: -1);\n  return names;\n}\n\nexport function getKeyValueAutoComplete(studies, key, inputText) {\n  inputText = inputText.toLowerCase();\n  // Get values for key from each study\n  let values = []\n  studies.forEach(study => {\n    let v = getStudyValues(study, key);\n    for (let i=0; i<v.length; i++) {\n      values.push(v[i]);\n    }\n  });\n  // We want values that match inputText\n  // Except for \"Publication Authors\", where we want words\n  // Create dict of {lowercaseValue: origCaseValue}\n  let matchCounts = values.reduce((prev, value) => {\n    let matches = [];\n    if (key === \"Publication Authors\") {\n      // Split surnames, ignoring AN initials.\n      let names = value.split(/,| and | & /)\n        .map(n => {\n          // Want the surname from e.g. 'Jan Ellenberg' or 'Held M' or 'Øyvind Ødegård-Fougner'\n          let words = n.split(\" \").filter(w => w.match(/[a-z]/g));\n          if (words && words.length === 1) return words[0];  // Surname only\n          return (words && words.length > 1) ? words.slice(1).join(\" \") : '';\n      }).filter(w => w.length > 0);\n      matches = names.filter(name => name.toLowerCase().indexOf(inputText) > -1);\n    } else if (value.toLowerCase().indexOf(inputText) > -1) {\n      matches.push(value);\n    }\n    matches.forEach(match => {\n      if (!prev[match.toLowerCase()]) {\n        // key is lowercase, value is original case\n        prev[match.toLowerCase()] = {value: match, count: 0};\n      }\n      // also keep count of matches\n      prev[match.toLowerCase()].count++;\n    });\n\n    return prev;\n  }, {});\n\n  // Make into list and sort by:\n  // match at start of phrase > match at start of word > other match\n  let matchList = [];\n  for (key in matchCounts) {\n    let matchScore = 1;\n    if (key.indexOf(inputText) === 0) {\n      // best match if our text STARTS WITH inputText\n      matchScore = 3;\n    } else if (key.indexOf(\" \" + inputText) > -1) {\n      // next best if a WORD starts with inputText\n      matchScore = 2;\n    }\n    // Make a list of sort score, orig text (NOT lowercase keys) and count\n    matchList.push([matchScore,\n                    matchCounts[key].value,\n                    matchCounts[key].count]);\n  }\n\n  // Sort by the matchScore (hightest first)\n  matchList.sort(function(a, b) {\n    if (a[0] < b[0]) return 1;\n    if (a[0] > b[0]) return -1;\n    // equal score. Sort by value (lowest first)\n    if (a[1].toLowerCase() > b[1].toLowerCase()) return 1;\n    return -1;\n  });\n\n  // Return the matches\n  return matchList\n    .map(m => {\n      // Auto-complete uses {label: 'X (n)', value: 'X'}\n      return {label: `${ m[1] } (${ m[2] })`, value: m[1]}\n    })\n    .filter(m => m.value.length > 0);\n}\n\nexport function filterStudiesByMaprResponse(studies, data) {\n  // filter studies by 'screens' and 'projects'\n  let imageCounts = {};\n  data.screens.forEach(s => {imageCounts[`screen-${ s.id }`] = s.extra.counter});\n  data.projects.forEach(s => {imageCounts[`project-${ s.id }`] = s.extra.counter});\n\n  let filterFunc = study => {\n    return imageCounts.hasOwnProperty(study.objId);\n  }\n\n  let filteredStudies = studies\n    .filter(filterFunc)\n    .map(study => {\n      return {...study, imageCount: imageCounts[study.objId]}\n    });\n  return filteredStudies;\n}\n","\nexport const BASE_URL = \"http://idr.openmicroscopy.org/\";\n\nexport function getStudyValue(study, key) {\n  if (!study.mapValues) return;\n  for (let i=0; i<study.mapValues.length; i++){\n    let kv = study.mapValues[i];\n    if (kv[0] === key) {\n      return kv[1];\n    }\n  }\n}\n\nexport async function fetchStudies() {\n  // Load Projects AND Screens, sort them and render...\n  let studies = await Promise.all([\n    fetch(BASE_URL + \"api/v0/m/projects/?childCount=true\"),\n    fetch(BASE_URL + \"api/v0/m/screens/?childCount=true\"),\n  ]).then(responses =>\n    Promise.all(responses.map(res => res.json()))\n    ).then(([projects, screens]) => {\n      let studies = projects.data;\n      studies = studies.concat(screens.data);\n      \n      // ignore empty studies with no images\n      studies = studies.filter(study => study['omero:childCount'] > 0);\n      \n      // sort by name, reverse\n      studies.sort(function(a, b) {\n        var nameA = a.Name.toUpperCase();\n        var nameB = b.Name.toUpperCase();\n        if (nameA < nameB) {\n          return 1;\n        }\n        if (nameA > nameB) {\n          return -1;\n        }\n        // names must be equal\n        return 0;\n      });\n      \n      // Add 'id', 'type' (\"project\"), studyId (\"screen-1\") to each\n      studies = studies.map(study => {\n        study.id = study['@id'];\n        study.type = study['@type'].split('#')[1].toLowerCase();\n        study.objId = `${ study.type }-${ study.id }`;\n        return study;\n      });\n      return studies;\n    });\n  return studies;\n}\n  \n  export async function loadStudiesMapAnnotations(studies) {\n    let url = BASE_URL + \"webclient/api/annotations/?type=map\";\n    let data = studies\n      .map(study => `${ study.type }=${ study.id }`)\n      .join(\"&\");\n    url += '&' + data;\n    return await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        // populate the studies array...\n        // dict of {'project-1' : key-values}\n        let annsByParentId = {};\n        data.annotations.forEach(ann => {\n          let key = ann.link.parent.class;  // 'ProjectI'\n          key = key.substr(0, key.length-1).toLowerCase();\n          key += '-' + ann.link.parent.id;  // project-1\n          if (!annsByParentId[key]) {\n            annsByParentId[key] = [];\n          }\n          annsByParentId[key] = annsByParentId[key].concat(ann.values);\n        });\n        // Add mapValues to studies...\n        studies = studies.map(study => {\n          // immutable - create copy\n          study = {...study};\n          let key = `${ study['@type'].split('#')[1].toLowerCase() }-${ study['@id'] }`;\n          let values = annsByParentId[key];\n          if (values) {\n            study.mapValues = values;\n            let releaseDate = getStudyValue(study, 'Release Date');\n            if (releaseDate) {\n              study.date = new Date(releaseDate);\n              if (isNaN(study.date.getTime())) {\n                study.date = undefined;\n              }\n            }\n            study.title = getStudyValue(study, 'Publication Title');\n          }\n          return study;\n        });\n        return studies;\n      });\n  }\n\n  export async function loadStudiesThumbnails(studies) {\n    let url = BASE_URL + \"gallery-api/thumbnails/\";\n  \n    let toFind = studies.map(study => `${ study.type }=${ study.id }`);\n    return await fetch(url + '?' + toFind.join('&'))\n      .then(response => response.json())\n      .then(data => {\n        return studies.map(study => {\n          // immutable - copy...\n          study = {...study};\n          if (data[study.objId]) {\n            study.image = data[study.objId].image;\n            study.thumbnail = data[study.objId].thumbnail;\n          }\n          return study;\n        })\n      });\n  }\n\n  export async function loadMaprAutocomplete(key, value) {\n    let url = `${ BASE_URL }mapr/api/autocomplete/${ key }/`;\n    url += `?value=${ value.toLowerCase() }&query=true`;\n    let matches = await fetch(url).then(response => response.json());\n    return matches;\n  }\n\n  export async function loadMaprStudies(key, value) {  \n    // Get all terms that match (NOT case_sensitive)\n    let url = `${ BASE_URL }mapr/api/${ key }/?value=${ value }&case_sensitive=false&orphaned=true`;\n    let data = await fetch(url).then(response => response.json());\n    \n    let maprTerms = data.maps.map(term => term.id);\n    let termUrls = maprTerms.map(term => `${ BASE_URL }mapr/api/${ key }/?value=${ term }`);\n\n    // Get results for All terms\n    return await Promise.all(termUrls.map(url => fetch(url)))\n      .then(responses => Promise.all(responses.map(res => res.json())))\n      .then((responses) => {\n        // add term to each response\n        return responses.map((rsp, i) => {\n          return {...rsp, term: maprTerms[i]}\n        })\n      })\n  }\n","import React from 'react';\nimport { BASE_URL } from './model/fetchData';\n\nfunction CategoryStudy({study}) {\n\n  let studyStyle = {}\n  if (study.thumbnail) {\n    studyStyle['backgroundImage'] = `url(\"${ study.thumbnail }\")`;\n  }\n\n  return (\n    <div key={study.objId} className=\"row study\">\n      <div>{study.id}</div>\n      <div className=\"studyImage\" style={studyStyle}>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${ BASE_URL }webclient/?show=${ study.objId }`}>\n          <div>\n            <div className=\"studyText\">\n              <p title=\"We provide a user-friendly 3D editing tool to rapidly correct segmentation errors.  We test our method alongside other previously-published user-friendly methods, with focus on mid-gestation embryos, 3D cultures of pluripotent stem cells and pluripotent stem cell-derived neural rosettes.\">\n                {study.title}\n              </p>\n            </div>\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryStudy;\n","import React from 'react';\nimport { filterStudiesByMapQuery } from './model/filterStudies';\nimport CategoryStudy from './CategoryStudy';\n\nfunction Category({data, studies}) {\n\n  let categoryStudies = filterStudiesByMapQuery(studies, data.query);\n  if (categoryStudies.length === 0) {\n    return <span></span>\n  }\n  return (\n    <div className=\"row\">\n        <h1>{data.label} ({ categoryStudies.length })</h1>\n        <div className=\"category\">\n          <div>\n            {categoryStudies.map(study => (\n                <CategoryStudy key={study.objId}\n                  study={study}\n                />\n            ))}\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Category;\n","import React from 'react';\nimport Category from './Category';\n\nfunction Categories({studies}) {\n\n  const categories = [\n    {\"label\": \"Most Recent\", \"index\": 0, \"query\": \"LAST10:date\"},\n    {\"label\": \"Time-lapse imaging\", \"index\": 1, \"query\": \"Study Type:time OR Study Type:5D OR Study Type:3D-tracking\"},\n    {\"label\": \"Light sheet fluorescence microscopy\", \"index\": 2, \"query\": \"Study Type:light sheet\"},\n    {\"label\": \"Protein localization studies\", \"index\": 3, \"query\": \"Study Type:protein localization\"},\n    {\"label\": \"Digital pathology imaging\", \"index\": 4, \"query\":\"Study Type:histology\"},\n    {\"label\": \"Yeast studies\", \"index\": 5, \"query\": \"Organism: Saccharomyces cerevisiae OR Organism:Schizosaccharomyces pombe\"},\n    {\"label\": \"High-content screening (human)\", \"index\": 6, \"query\": \"Organism:Homo sapiens AND Study Type:high content screen\"}\n  ];\n\n  return (\n    <div id=\"studies\" className=\"row horizontal\">\n    {categories.map(category => (\n        <Category\n        key={category.label}\n        data={category}\n        studies={studies} />\n    ))}\n    </div>\n  );\n}\n\nexport default Categories;\n","import React, { useState, useEffect } from 'react';\nimport { filterStudiesByMaprResponse } from './model/filterStudies';\nimport { BASE_URL, loadMaprStudies, getStudyValue } from './model/fetchData';\n\nfunction Search({studies, query}) {\n\n  const [loading, setLoading] = useState(true);\n  const [maprResults, setMaprResults] = useState([]);\n\n  let key = query.split(':')[0].replace('mapr_', '');\n  let value = query.split(':')[1];\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      // Load studies, then load map annotations and thumbnails for them\n      let results = await loadMaprStudies(key, value);\n      setLoading(false);\n      setMaprResults(results);\n    };\n    fetchData();\n  }, []);\n\n  if (loading || studies.length === 0) {\n    return (<div>Finding images with {key}: {value}...</div>);\n  }\n\n  // filter studies by results\n  // maprResults is a list e.g. [{term:Top2, projects:[], screens:[]}, {term: TOP2...}\n  let studiesByTerm = maprResults.map(data => filterStudiesByMaprResponse(studies, data));\n  let terms = maprResults.map(r => r.term);\n  let imageCount = studiesByTerm.reduce((count, studies) => {\n    return count + studies.reduce((count, study) => count + study.imageCount, 0);\n  }, 0);\n  let studyCount = studiesByTerm.reduce((count, studies) => count + studies.length, 0);\n\n  if (studyCount === 0) {\n    return (<div>No matching studies. Try (TODO: other) IDR.</div>)\n  }\n\n  return (\n    <div className=\"small-12 small-centered medium-12 medium-centered text-center columns\">\n      <p className=\"filterMessage\">\n       Found <strong>{imageCount}</strong> images\n       with <strong>{key}</strong>: <strong>{terms.join('/')}\n       </strong> in <strong>{studyCount}</strong> studies\n      </p>\n\n      { studiesByTerm.map((studies, idx) => (\n        <div>\n          <h2>{terms[idx]}</h2>\n          <table style={{ marginTop: 20}}>\n            <tbody>\n              <tr>\n                <th>Study ID</th>\n                <th>Organism</th>\n                <th>Image count</th>\n                <th>Title</th>\n                <th>Sample Images</th>\n                <th>Link</th>\n              </tr>\n              {studies.map(study => (\n                <tr>\n                  <td>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\"\n                        href={`${ BASE_URL}mapr/${ key }/?value=${ terms[idx] }&show=${study.objId}`}>\n                      {study.objId}\n                    </a>\n                  </td>\n                  <td>{ getStudyValue(study, 'Organism') }</td>\n                  <td>{ study.imageCount }</td>\n                  <td title={ study.title }>\n                    { study.title.slice(0,40) }{ study.title.length > 40 ? '...' : '' }\n                  </td>\n                  <td class=\"exampleImages\"></td>\n                  <td class=\"exampleImagesLink\"><a target=\"_blank\" href=\"/mapr/gene/?value=TOP2&amp;show=plate-101\">\n                    more...\n                  </a></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n      </div>\n  );\n}\n\nexport default Search;\n","import React from 'react';\nimport CategoryStudy from './CategoryStudy';\nimport MaprSearch from './MaprSearch';\nimport { filterStudiesByMapQuery } from './model/filterStudies';\nconst queryString = require('query-string');\n\nfunction Search({studies, location}) {\n\n  let query = queryString.parse(location.search).query;\n\n  if (query.startsWith('mapr_')) {\n    return <MaprSearch\n             studies={studies}\n             query={query} />\n  }\n\n  let filteredStudies;\n  if (query.split(':')[0] === 'Name') {\n    let toMatch = query.split(':')[1].toLowerCase();\n    filteredStudies = studies.filter(study => study.Name.toLowerCase().indexOf(toMatch) !== -1);\n  } else {\n    filteredStudies = filterStudiesByMapQuery(studies, query);\n  }\n\n  return (\n    <div className=\"small-12 small-centered medium-12 medium-centered columns\">\n    <div id=\"studies\" className=\"row horizontal studiesLayout\">\n      {filteredStudies.map(study => (\n        <CategoryStudy key={study.objId}\n                  study={study}\n                />)\n        )}\n    </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useState } from 'react';\nimport Autocomplete from 'react-autocomplete';\nimport { absoluteNavigate as navigate } from \"./router/wrappers\";\nimport { loadMaprAutocomplete } from './model/fetchData';\n\nimport { getKeyValueAutoComplete, getStudiesNames } from './model/filterStudies';\n\nlet debounceTimeout;\n\nfunction SearchForm({studies}) {\n\n  let menuStyle = {\n    position: 'absolute',\n    boxSizing: 'border-box',\n    width: '100%',\n    background: 'white',\n    border: '1px solid #cccccc',\n    zIndex: 100,\n    paddingLeft: 6,\n  }\n\n  const [searchKey, setSearchKey] = useState('Name');\n  const [searchValue, setSearchValue] = useState('');\n  const [maprAutocompleteItems, setMaprAutocompleteItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  let handleKeyChange = (event) => {\n    setSearchKey(event.target.value);\n    // clear previous search value\n    setSearchValue('');\n    setMaprAutocompleteItems([]);\n  }\n\n  let handleAutocompleteChange = (event, value) => {\n    setSearchValue(value);\n    // If MAPR, need to update autocomplete options here if value.length > 1...\n    value = value.trim();\n    if (searchKey.startsWith('mapr_')) {\n      if (value.length < 2) {\n        setMaprAutocompleteItems([]);\n        return;\n      }\n      // debounce\n      if (debounceTimeout) {\n        clearTimeout(debounceTimeout);\n      }\n      debounceTimeout = setTimeout(() => {\n        let maprKey = searchKey.replace('mapr_', '');\n        // show spinner\n        setLoading(true);\n        loadMaprAutocomplete(maprKey, value)\n          .then(items => {\n            setLoading(false);\n            setMaprAutocompleteItems(items);\n          });\n      }, 500);\n    }\n  }\n\n  let handleSelect = (value) => {\n    setSearchValue(value);\n    navigate(`/search/?query=${ searchKey }:${ value }`);\n  }\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    navigate(`/search/?query=${ searchKey }:${ searchValue }`);\n  }\n\n  let autocompleteItems;\n  // If MAPR query, need to use loaded data...\n  if (searchKey.startsWith('mapr_')) {\n    autocompleteItems = maprAutocompleteItems;\n  } else if (searchKey === 'Name') {\n    autocompleteItems = getStudiesNames(studies, searchValue)\n      .map(n => ({label:n, value:n}))\n  } else {\n    autocompleteItems = getKeyValueAutoComplete(studies, searchKey, searchValue);\n  }\n\n  return (\n    <div className=\"row horizontal\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"small-12 medium-12 large-2 columns\">\n          <h2 className=\"search-by\">Search by:</h2>\n        </div>\n        <div className=\"small-12 medium-4 large-3 columns\">\n          <select value={searchKey} id=\"maprConfig\" onChange={handleKeyChange}>\n            <optgroup id=\"studyKeys\" label=\"Study Attributes\">\n              <option value=\"Name\">Name (IDR number)</option>\n              <option value=\"Imaging Method\">Imaging Method</option>\n              <option value=\"License\">License</option>\n              <option value=\"Organism\">Organism</option>\n              <option value=\"Publication Authors\">Publication Authors</option>\n              <option value=\"Publication Title\">Publication Title</option>\n              <option value=\"Screen Technology Type\">Screen Technology Type</option>\n              <option value=\"Screen Type\">Screen Type</option>\n              <option value=\"Study Type\">Study Type</option>\n            </optgroup>\n            <optgroup id=\"maprKeys\" label=\"Image Attributes\"><option value=\"mapr_antibody\">Antibody</option>\n              <option value=\"mapr_cellline\">Cell Lines</option>\n              <option value=\"mapr_gene\">Gene</option>\n              <option value=\"mapr_phenotype\">Phenotype</option>\n              <option value=\"mapr_sirna\">siRNA</option>\n            </optgroup>\n          </select>\n        </div>\n        <div className=\"small-12 medium-8 large-7 columns\" style={{position:'relative'}}>\n        <Autocomplete\n          value={searchValue}\n          wrapperStyle={{ position: 'relative', display: 'inline-block', width: '100%'}}\n          items={autocompleteItems}\n          getItemValue={(item) => item.value}\n          onChange={handleAutocompleteChange}\n          onSelect={handleSelect}\n          renderInput={(props) => (\n            <input\n              type=\"text\" {...props}\n              placeholder=\"Type to filter values...\"\n              style={{'margin':0}} />\n          )}\n          renderMenu={children => (\n            <div style={menuStyle}>\n              {children}\n            </div>\n          )}\n          renderItem={(item, isHighlighted) => (\n            <div\n              className={`item ${isHighlighted ? 'item-highlighted' : ''}`}\n              key={item.value}\n            >{item.label || item.value}</div>\n          )}\n          />\n\n          {loading && <svg id=\"spinner\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"sync\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"svg-inline--fa fa-sync fa-w-16 fa-spin fa-lg\"><path fill=\"currentColor\" d=\"M440.65 12.57l4 82.77A247.16 247.16 0 0 0 255.83 8C134.73 8 33.91 94.92 12.29 209.82A12 12 0 0 0 24.09 224h49.05a12 12 0 0 0 11.67-9.26 175.91 175.91 0 0 1 317-56.94l-101.46-4.86a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12H500a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12h-47.37a12 12 0 0 0-11.98 12.57zM255.83 432a175.61 175.61 0 0 1-146-77.8l101.8 4.87a12 12 0 0 0 12.57-12v-47.4a12 12 0 0 0-12-12H12a12 12 0 0 0-12 12V500a12 12 0 0 0 12 12h47.35a12 12 0 0 0 12-12.6l-4.15-82.57A247.17 247.17 0 0 0 255.83 504c121.11 0 221.93-86.92 243.55-201.82a12 12 0 0 0-11.8-14.18h-49.05a12 12 0 0 0-11.67 9.26A175.86 175.86 0 0 1 255.83 432z\"></path></svg>}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchForm\n;","import React, { useState, useEffect } from 'react';\nimport { Router } from \"@reach/router\"\nimport Categories from './Categories';\nimport Search from './Search';\nimport SearchForm from './SearchForm';\nimport { fetchStudies,\n         loadStudiesMapAnnotations,\n         loadStudiesThumbnails } from './model/fetchData';\nimport { BASEPATH } from './router/wrappers';\n\nfunction Studies() {\n\n  const [data, setData] = useState({ studies: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n\n      // Load studies, then load map annotations and thumbnails for them\n      let studies = await fetchStudies();\n      studies = await loadStudiesMapAnnotations(studies);\n      studies = await loadStudiesThumbnails(studies);\n      setData({studies});\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"row column\">\n      <SearchForm\n        studies={data.studies}\n      />\n      <Router primary={false} basepath={BASEPATH}>\n        <Categories\n          path=\"/\"\n          studies={data.studies}\n        />\n        <Search\n          path=\"/search/\"\n          studies={data.studies}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default Studies;\n","import React from 'react';\nimport { AbsoluteLink as Link } from './router/wrappers';\n// Use a customised foundation.css - ported from IDR\nimport './css/foundation.min.css';\nimport './css/openmicroscopy.css';\nimport './css/idr.css';\nimport './css/studies.css';\nimport { ReactComponent as Logo } from './logo-idr.svg';\nimport Studies from './Studies';\n\nfunction App() {\n\n  let hrStyle = {\n    height:0, margin: '8px'\n  }\n  return (\n    <div>\n      <div className=\"main-nav-bar top-bar\" id=\"main-menu\">\n        <div className=\"top-bar-left\">\n          <ul className=\"dropdown menu\" data-dropdown-menu=\"219f5j-dropdown-menu\" role=\"menubar\">\n            <li role=\"menuitem\">\n              <Link to=\"/\" className=\"logo\">\n                <Logo />\n              </Link>\n            </li>\n            <li role=\"menuitem\">\n              <a href=\"/cell/\">\n                Cell - IDR\n              </a>\n            </li>\n            <li role=\"menuitem\">\n              <a href=\"/tissue/\">\n                Tissue - IDR\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <hr className=\"whitespace\" style={hrStyle} />\n      <div className=\"row columns text-center\">\n        <h1>Welcome to IDR...</h1>\n        <p>\n          The Image Data Resource (IDR) is a public repository of image datasets from published scientific studies,\n          <br />\n          where the community can submit, search and access high-quality bio-image data.\n        </p>\n      </div>\n\n      <Studies />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"typeface-nunito\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}